<doc>
  <head>
    <title>Liquid Site Template API</title>
  </head>

  <body>

    <h1>The document file object</h1>

    <p>The document file object is used to access the content of a
    file associated with a document.</p>

    <list style="compact">
      <item>
        <title><ref id="created">created</ref></title>
        <text>Returns the file created date.</text>
      </item>
      <item>
        <title><ref id="date">date</ref></title>
        <text>Returns the file revision date.</text>
      </item>
      <item>
        <title><ref id="hasAccess">hasAccess(permission)</ref></title>
        <text>Checks whether the current logged in user has a
        specified permission over the file.</text>
      </item>
      <item>
        <title><ref id="id">id</ref></title>
        <text>Returns the file id.</text>
      </item>
      <item>
        <title><ref id="lock">lock</ref></title>
        <text>Returns the file lock object.</text>
      </item>
      <item>
        <title><ref id="mimeType">mimeType</ref></title>
        <text>Returns the MIME type of the file.</text>
      </item>
      <item>
        <title><ref id="name">name</ref></title>
        <text>Returns the file name.</text>
      </item>
      <item>
        <title><ref id="online">online</ref></title>
        <text>Returns the file online flag.</text>
      </item>
      <item>
        <title><ref id="parent">parent</ref></title>
        <text>Returns the parent section of the file.</text>
      </item>
      <item>
        <title><ref id="path">path</ref></title>
        <text>Returns the file path.</text>
      </item>
      <item>
        <title><ref id="revision">revision</ref></title>
        <text>Returns the file revision number.</text>
      </item>
      <item>
        <title><ref id="size">size</ref></title>
        <text>Returns the size of the file in bytes.</text>
      </item>
      <item>
        <title><ref id="user">user</ref></title>
        <text>Returns the file revision author.</text>
      </item>
    </list>


    <separator/>

    <h2 id="mimeType" style="inner">mimeType</h2>

    <p>Returns the MIME type of the file.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>mimeType &#8594; string</code></p>

    <h3>Returns:</h3>

    <p style="indent">The MIME type of the file.</p>

    <h3>Example:</h3>

    <p>The following code iterates through the files associated with
    a document and prints the mime types:</p>

    <example>
      <preformat>&lt;#list liquidsite.findDocument("Section1/doc1").files as file&gt;
  Document file: ${file.name} (${file.size} bytes, ${file.mimeType})
&lt;/#list&gt;</preformat>
    </example>


    <separator/>

    <h2 id="size" style="inner">size</h2>

    <p>Returns the size of the file in bytes.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>size &#8594; number</code></p>

    <h3>Returns:</h3>

    <p style="indent">The size of the file in bytes.</p>

    <h3>Example:</h3>

    <p>The following code iterates through the files associated with
    a document and prints the file sizes:</p>

    <example>
      <preformat>&lt;#list liquidsite.findDocument("Section1/doc1").files as file&gt;
  Document file: ${file.name} (${file.size} bytes, ${file.mimeType})
&lt;/#list&gt;</preformat>
    </example>


    <separator/>

    <h2 id="created" style="inner">created</h2>

    <p>Returns the file created date.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>created &#8594; date</code></p>

    <h3>Returns:</h3>

    <p style="indent">The file created date.</p>

    <h3>Example:</h3>

    <p>The following code iterates through the files associated with
    a document and prints the creation dates:</p>

    <example>
      <preformat>&lt;#list liquidsite.findDocument("Section1/doc1").files as file&gt;
  Document file created: ${file.created}
&lt;/#list&gt;</preformat>
    </example>


    <separator/>

    <h2 id="date" style="inner">date</h2>

    <p>Returns the file revision date.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>date &#8594; date</code></p>

    <h3>Returns:</h3>

    <p style="indent">The file revision date.</p>

    <h3>Example:</h3>

    <p>The following code iterates through the files associated with
    a document and prints the revision dates:</p>

    <example>
      <preformat>&lt;#list liquidsite.findDocument("Section1/doc1").files as file&gt;
  Document file revided: ${file.date}
&lt;/#list&gt;</preformat>
    </example>


    <separator/>

    <h2 id="id" style="inner">id</h2>

    <p>Returns the file id.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>id &#8594; number</code></p>

    <h3>Returns:</h3>

    <p style="indent">The file id.</p>

    <h3>Example:</h3>

    <p>The following code iterates through the files associated with
    a document and prints the file ids:</p>

    <example>
      <preformat>&lt;#list liquidsite.findDocument("Section1/doc1").files as file&gt;
  Document file id: ${file.id}
&lt;/#list&gt;</preformat>
    </example>


    <separator/>

    <h2 id="name" style="inner">name</h2>

    <p>Returns the file name.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>name &#8594; string</code></p>

    <h3>Returns:</h3>

    <p style="indent">The file name.</p>

    <h3>Example:</h3>

    <p>The following code iterates through the files associated with
    a document and prints the file names:</p>

    <example>
      <preformat>&lt;#list liquidsite.findDocument("Section1/doc1").files as file&gt;
  Document file: ${file.name} (${file.size} bytes, ${file.mimeType})
&lt;/#list&gt;</preformat>
    </example>


    <separator/>

    <h2 id="lock" style="inner">lock</h2>

    <p>Returns the file lock object.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>lock &#8594; <ref file="lock.xml">lock
    object</ref></code></p>

    <h3>Returns:</h3>

    <p style="indent">The file lock object.</p>

    <h3>Example:</h3>

    <p>The following code retrieves the lock from the first document
    file:</p>

    <example>
      <preformat>&lt;#assign doc = liquidsite.findDocument("Section1/doc1")&gt;
&lt;#assign fileLock = doc.files[0].lock&gt;</preformat>
    </example>


    <separator/>

    <h2 id="online" style="inner">online</h2>

    <p>Returns the file online flag.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>online &#8594; boolean</code></p>

    <h3>Returns:</h3>

    <p style="indent">True if the file is online, false
    otherwise.</p>

    <h3>Example:</h3>

    <p>The following code retrieves the online flag from the first
    document file:</p>

    <example>
      <preformat>&lt;#assign doc = liquidsite.findDocument("Section1/doc1")&gt;
&lt;#assign fileOnline = doc.files[0].online&gt;</preformat>
    </example>


    <separator/>

    <h2 id="parent" style="inner">parent</h2>

    <p>Returns the parent document of the file.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>parent &#8594; <ref
    file="document.xml">document object</ref></code></p>

    <h3>Returns:</h3>

    <p style="indent">The parent document under which the file is
    located.</p>

    <h3>Example:</h3>

    <p>The following code retrieves the document from the first
    document file:</p>

    <example>
      <preformat>&lt;#assign doc = liquidsite.findDocument("Section1/doc1")&gt;
&lt;#assign fileParent = doc.files[0].parent&gt;
Behold, ${doc.id} and ${fileParent.id} are identical!</preformat>
    </example>


    <separator/>

    <h2 id="path" style="inner">path</h2>

    <p>Returns the file path.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>path &#8594; string</code></p>

    <h3>Returns:</h3>

    <p style="indent">The file path.</p>

    <h3>Example:</h3>

    <p>The following code outputs the file path from the first
    document file:</p>

    <example>
      <preformat>&lt;#assign doc = liquidsite.findDocument("Section1/doc1")&gt;
The file path is ${doc.files[0].path}.</preformat>
    </example>


    <separator/>

    <h2 id="revision" style="inner">revision</h2>

    <p>Returns the file revision number.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>revision &#8594; number</code></p>

    <h3>Returns:</h3>

    <p style="indent">The file revision number, or zero (0) if the
    file doesn't exist.</p>

    <h3>Example:</h3>

    <p>The following code outputs the revision from the first
    document file:</p>

    <example>
      <preformat>&lt;#assign doc = liquidsite.findDocument("Section1/doc1")&gt;
The file revision is ${doc.files[0].revision}.</preformat>
    </example>


    <separator/>

    <h2 id="user" style="inner">user</h2>

    <p>Returns the file revision author.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>user &#8594; <ref file="user.xml">user
    object</ref></code></p>

    <h3>Returns:</h3>

    <p style="indent">The file revision author, or an empty user
    if the file doesn't exist.</p>

    <h3>Example:</h3>

    <p>The following code stores the file revision user from the
    first document file:</p>

    <example>
      <preformat>&lt;#assign doc = liquidsite.findDocument("Section1/doc1")&gt;
&lt;#assign user = doc.files[0].user&gt;</preformat>
    </example>


    <separator/>

    <h2 id="hasAccess" style="inner">hasAccess</h2>

    <p>Checks if the current user has a specified access permission
    to the document file. The input permission types available
    are:</p>

    <list style="compact">
      <item>
        <text>read -- for reading permission (always true)</text>
      </item>
      <item>
        <text>write -- for writing permission</text>
      </item>
      <item>
        <text>publish -- for publishing permission</text>
      </item>
      <item>
        <text>admin -- for administration permission</text>
      </item>
    </list>

    <h3>Syntax:</h3>

    <p style="indent"><code>hasAccess(permission) &#8594; boolean</code></p>

    <h3>Parameters:</h3>

    <list style="compact">
      <item>
        <text><code>permission</code> -- the string containing the
        permission type (as above)</text>
      </item>
    </list>

    <h3>Returns:</h3>

    <p style="indent">True if the current user has the specified
    permission, or false otherwise.</p>

    <h3>Example:</h3>

    <p>The following code checks if the current user has write access
    to the first document file:</p>

    <example>
      <preformat>&lt;#assign doc = liquidsite.findDocument("Section1/doc1")&gt;
&lt;#if doc.files[0].hasAccess("write")&gt;
  The current user has write access.
&lt;/#if&gt;</preformat>
    </example>

  </body>
</doc>
