<doc>
  <head>
    <title>Liquid Site Release Documentation</title>
  </head>

  <body>

    <h1>The user object</h1>

    <p>The user object represents a Liquid Site user.</p>

    <list style="compact">
      <item>
        <title><ref id="domainadmin">domainadmin</ref></title>
        <text>Checks whether the user has administration priviledges
        over the domain.</text>
      </item>
      <item>
        <title><ref id="email">email</ref></title>
        <text>Returns the user email.</text>
      </item>
      <item>
        <title><ref id="groups">groups</ref></title>
        <text>Returns a list of the groups to which the user
        belongs.</text>
      </item>
      <item>
        <title><ref id="isGroup">isGroup(name)</ref></title>
        <text>Checks if the user is member of a named group.</text>
      </item>
      <item>
        <title><ref id="login">login</ref></title>
        <text>Returns the user login username.</text>
      </item>
      <item>
        <title><ref id="realName">realName</ref></title>
        <text>Returns the user real name.</text>
      </item>
      <item>
        <title><ref id="save">save()</ref></title>
        <text>Saves all the modifications to a user.</text>
      </item>
      <item>
        <title><ref id="sendEmailVerification">sendEmailVerification(subject, text, replaceText)</ref></title>
        <text>Sends an email verification request to the user.</text>
      </item>
      <item>
        <title><ref id="setEmail">setEmail(email)</ref></title>
        <text>Modifies the user email.</text>
      </item>
      <item>
        <title><ref id="setLogin">setLogin(login)</ref></title>
        <text>Modifies the user login username (only new users).</text>
      </item>
      <item>
        <title><ref id="setPassword">setPassword(password)</ref></title>
        <text>Modifies the user password.</text>
      </item>
      <item>
        <title><ref id="setRealName">setRealName(name)</ref></title>
        <text>Modifies the user real name.</text>
      </item>
      <item>
        <title><ref id="superuser">superuser</ref></title>
        <text>Returns the superuser flag for the user.</text>
      </item>
      <item>
        <title><ref id="verifyEmail">verifyEmail(key)</ref></title>
        <text>Verifies the user email address and unlocks this user.</text>
      </item>
    </list>


    <separator/>
 
    <h2 id="domainadmin" style="inner">domainadmin</h2>

    <p>Checks whether the user has administration priviledges over the
    domain.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>domainadmin &#8594; boolean</code></p>

    <h3>Returns:</h3>

    <p style="indent">True if the user has administration priviledges
    over the domain, false otherwise.</p>

    <h3>Example:</h3>

    <p>This code checks if a user has administration priviledges:</p>

    <example>
      <preformat>&lt;#assign user = liquidsite.findUser("liquidsite").lock&gt;
&lt;#if user.domainadmin&gt;</preformat>
    </example>


    <separator/>
 
    <h2 id="email" style="inner">email</h2>

    <p>Returns the user email.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>email &#8594; string</code></p>

    <h3>Returns:</h3>

    <p style="indent">The user email.</p>

    <h3>Example:</h3>

    <p>This code outputs the email of a user:</p>

    <example>
      <preformat>&lt;#assign user = liquidsite.findUser("liquidsite").lock&gt;
&lt;p&gt;The user email is ${user.email}&lt;/p&gt;</preformat>
    </example>


    <separator/>
 
    <h2 id="groups" style="inner">groups</h2>

    <p>Returns a list of the groups to which the user belongs.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>groups &#8594; sequence of string</code></p>

    <h3>Returns:</h3>

    <p style="indent">A list of the groups to which the user
    belongs.</p>

    <h3>Example:</h3>

    <p>This code loops through a user groups:</p>

    <example>
      <preformat>&lt;#assign user = liquidsite.findUser("liquidsite").lock&gt;
&lt;#list user.groups&gt;</preformat>
    </example>


    <separator/>
 
    <h2 id="isGroup" style="inner">isGroup</h2>

    <p>Checks if the user is member of a named group.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>isGroup(name) &#8594; boolean</code></p>

    <h3>Parameters:</h3>

    <list style="compact">
      <item>
        <text><code>name</code> -- the group name</text>
      </item>
    </list>

    <h3>Returns:</h3>

    <p style="indent">True if the user belongs to the named group,
    false otherwise.</p>

    <h3>Example:</h3>

    <p>This code checks if a user belongs to a certain group:</p>

    <example>
      <preformat>&lt;#assign user = liquidsite.findUser("liquidsite").lock&gt;
&lt;#if user.isGroup("editors")&gt;</preformat>
    </example>


    <separator/>
 
    <h2 id="login" style="inner">login</h2>

    <p>Returns the user login username.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>login &#8594; string</code></p>

    <h3>Returns:</h3>

    <p style="indent">The user login username.</p>

    <h3>Example:</h3>

    <p>This code outputs the login of a user:</p>

    <example>
      <preformat>&lt;#assign user = liquidsite.findUser("liquidsite").lock&gt;
&lt;p&gt;The user login is ${user.login}&lt;/p&gt;</preformat>
    </example>


    <separator/>
 
    <h2 id="realName" style="inner">realName</h2>

    <p>Returns the user real name.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>realName &#8594; string</code></p>

    <h3>Returns:</h3>

    <p style="indent">The user real name.</p>

    <h3>Example:</h3>

    <p>This code outputs the real name of a user:</p>

    <example>
      <preformat>&lt;#assign user = liquidsite.findUser("liquidsite").lock&gt;
&lt;p&gt;The user realName is ${user.realName}&lt;/p&gt;</preformat>
    </example>


    <separator/>

    <h2 id="save" style="inner">save</h2>

    <p>Saves all the modifications to a user. This method will write
    all the changes to the database if security permits.</p>

    <p>New users can be saved by non-logged in users. Existing users
    can be saved by themselves. A logged in user with administrator
    privileges can save any other user, including themselves.
    Superusers cannot be modified at all by this method.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>save() &#8594; boolean</code></p>

    <h3>Example:</h3>

    <p>This code creates a new user "bob":</p>

    <example>
      <preformat>&lt;#assign user = liquidsite.findUser("bob")&gt;
${user.setLogin("bob")}
${user.setPassword("secret")}
${user.setRealName("Robert")}
${user.setEmail("info@liquidsite.net")}
&lt;#assign result = user.save()&gt;</preformat>
    </example>


    <separator/>

    <h2 id="setEmail" style="inner">setEmail</h2>

    <p>Modifies the user email address. The change is not saved
    until the <ref id="save">save()</ref> method is called.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>setEmail(email) &#8594; nothing</code></p>

    <h3>Example:</h3>

    <p>This code modifies the current user email address:</p>

    <example>
      <preformat>${liquidsite.user.setEmail("info@liquidsite.net")}
&lt;#assign result = liquidsite.user.save()&gt;</preformat>
    </example>


    <separator/>

    <h2 id="setLogin" style="inner">setLogin</h2>

    <p>Modifies the login username. This method can only be called
    for new users that have not yet been saved. It is not possible
    to change login username once a user has been saved. The new
    user is not saved until the <ref id="save">save()</ref> method
    is called.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>setLogin(login) &#8594; nothing</code></p>

    <h3>Example:</h3>

    <p>This code creates a new user "bob":</p>

    <example>
      <preformat>&lt;#assign user = liquidsite.findUser("bob")&gt;
${user.setLogin("bob")}
${user.setPassword("secret")}
${user.setRealName("Robert")}
${user.setEmail("info@liquidsite.net")}
&lt;#assign result = user.save()&gt;</preformat>
    </example>


    <separator/>

    <h2 id="setPassword" style="inner">setPassword</h2>

    <p>Modifies the user password. The change is not saved until
    the <ref id="save">save()</ref> method is called.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>setPassword(password) &#8594; nothing</code></p>

    <h3>Example:</h3>

    <p>This code modifies the password for the current user:</p>

    <example>
      <preformat>${liquidsite.user.setPassword("secret")}
&lt;#assign result = liquidsite.user.save()&gt;</preformat>
    </example>


    <separator/>

    <h2 id="setRealName" style="inner">setRealName</h2>

    <p>Modifies the user real name. The change is not saved until
    the <ref id="save">save()</ref> method is called.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>setRealName(name) &#8594; nothing</code></p>

    <h3>Example:</h3>

    <p>This code modifies the name for the current user:</p>

    <example>
      <preformat>${liquidsite.user.setRealName("Bobby")}
&lt;#assign result = liquidsite.user.save()&gt;</preformat>
    </example>


    <separator/>
 
    <h2 id="superuser" style="inner">superuser</h2>

    <p>Returns the superuser flag for the user.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>superuser &#8594; boolean</code></p>

    <h3>Returns:</h3>

    <p style="indent">True if the user is superuser, false
    otherwise.</p>

    <h3>Example:</h3>

    <p>This code checks if a user is superuser:</p>

    <example>
      <preformat>&lt;#assign user = liquidsite.findUser("liquidsite")&gt;
&lt;#if user.superuser&gt;</preformat>
    </example>


    <separator/>

    <h2 id="sendEmailVerification" style="inner">sendEmailVerification</h2>

    <p>Sends an email verification request to the user. The request
    email will only be sent if the user exists, has an email
    address set and has not been modified. A verfication key will
    be inserted into the email subject and text where a specified
    replacement text matches. The secret validation key is only sent
    to the user in email and cannot be retrieved in any other way
    for security reasons.</p>
    
    <p>This method is used for password recovery, as it would be
    unsecure to allow changes to users that cannot in some way
    authorize themselves. By sending a validation key to the user by
    email, it will only be possible to change the password if the
    user was able to read their email. When the user provides the
    validation key from the email, this user object can be unlocked
    with the <ref id="verifyEmail">verifyEmail(key)</ref> method.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>sendEmailVerification(subject, text, replaceText) &#8594; boolean</code></p>

    <h3>Returns:</h3>

    <p style="indent">True if the email was sent, or false
    otherwise.</p>

    <h3>Example:</h3>

    <p>This code sends an email verification mail:</p>

    <example>
      <preformat>&lt;#assign user = liquidsite.findUser("bob")&gt;
&lt;#assign subject = "Validation Key"&gt;
&lt;#assign text = "Validation Key:  ####"&gt;
&lt;#assign result = user.sendEmailVerification(subject, text, "####")&gt;</preformat>
    </example>


    <separator/>

    <h2 id="verifyEmail" style="inner">verifyEmail</h2>

    <p>Verifies the user email address and unlocks this user. The
    verification is done by comparing a previously sent key with
    the specified one. If the two keys match, the user email is
    considered verified and this user object is unlocked for save
    operations by an anonymous user.</p>

    <p>This method is used for password recovery, as it would be
    unsecure to allow changes to users that cannot in some way
    authorize themselves. By sending a validation key to the user by
    email, it will only be possible to change the password if the
    user was able to read their email. The validation key to enter
    for a user is created and sent with the
    <ref id="sendEmailVerification">sendEmailVerification(subject, text, replaceText)</ref>
    method.</p>

    <h3>Syntax:</h3>

    <p style="indent"><code>verifyEmail(key) &#8594; boolean</code></p>

    <h3>Returns:</h3>

    <p style="indent">True if the email was verified, or false
    otherwise.</p>

    <h3>Example:</h3>

    <p>This code uses a verification key to unlock a user and modify
    the password:</p>

    <example>
      <preformat>&lt;#assign user = liquidsite.findUser("bob")&gt;
&lt;#if user.verifyEmail(liquidsite.request.param.key)&gt;
  ${user.setPassword("secret")}
  &lt;#if user.save()&gt;
    Password changed
  &lt;#else&gt;
    Failed to save user
  &lt;/#if&gt;
&lt;#else&gt;
  Invalid validation key, email couldn't be verified
&lt;/#if&gt;</preformat>
    </example>

  </body>
</doc>
